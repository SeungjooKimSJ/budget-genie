"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function middleware(req) {\n    const res = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next();\n    // Create a Supabase client configured to use cookies\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://zolrdsjasjafdwmqakib.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpvbHJkc2phc2phZmR3bXFha2liIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3NjM4MTIsImV4cCI6MjA2MDMzOTgxMn0.1pYEPumd7uxhXpqt3G8rQ5A3HDEeMh0TEjFv11SMPLM\", {\n        cookies: {\n            get: (name)=>req.cookies.get(name)?.value,\n            set: (name, value, options)=>{\n                res.cookies.set({\n                    name,\n                    value,\n                    ...options\n                });\n            },\n            remove: (name, options)=>{\n                res.cookies.set({\n                    name,\n                    value: '',\n                    ...options\n                });\n            }\n        }\n    });\n    try {\n        // Refresh session if it exists\n        const { data: { session }, error } = await supabase.auth.getSession();\n        console.log('Middleware - Path:', req.nextUrl.pathname);\n        console.log('Middleware - Session:', session ? 'exists' : 'does not exist');\n        const isLoginPage = req.nextUrl.pathname === '/login';\n        const isProtectedRoute = !isLoginPage && req.nextUrl.pathname !== '/api/auth';\n        if (error) {\n            console.error('Middleware - Session error:', error);\n        }\n        // Handle protected routes\n        if (isProtectedRoute && !session) {\n            console.log('Middleware - Redirecting to login (no session)');\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/login', req.url));\n        }\n        // Handle login page access with active session\n        if (isLoginPage && session) {\n            console.log('Middleware - Redirecting to home (has session)');\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/', req.url));\n        }\n        return res;\n    } catch (error) {\n        console.error('Middleware - Critical error:', error);\n        // On critical error, allow the request to continue\n        return res;\n    }\n}\nconst config = {\n    matcher: [\n        '/((?!_next/static|_next/image|favicon.ico).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RTtBQUM3QjtBQUlwQyxlQUFlRSxXQUFXQyxHQUFnQjtJQUMvQyxNQUFNQyxNQUFNSCxxREFBWUEsQ0FBQ0ksSUFBSTtJQUU3QixxREFBcUQ7SUFDckQsTUFBTUMsV0FBcUNOLGlFQUFrQkEsQ0FDM0RPLDBDQUFvQyxFQUNwQ0Esa05BQXlDLEVBQ3pDO1FBQ0VJLFNBQVM7WUFDUEMsS0FBSyxDQUFDQyxPQUFTVixJQUFJUSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsT0FBT0M7WUFDdENDLEtBQUssQ0FBQ0YsTUFBTUMsT0FBT0U7Z0JBQ2pCWixJQUFJTyxPQUFPLENBQUNJLEdBQUcsQ0FBQztvQkFBRUY7b0JBQU1DO29CQUFPLEdBQUdFLE9BQU87Z0JBQUM7WUFDNUM7WUFDQUMsUUFBUSxDQUFDSixNQUFNRztnQkFDYlosSUFBSU8sT0FBTyxDQUFDSSxHQUFHLENBQUM7b0JBQUVGO29CQUFNQyxPQUFPO29CQUFJLEdBQUdFLE9BQU87Z0JBQUM7WUFDaEQ7UUFDRjtJQUNGO0lBR0YsSUFBSTtRQUNGLCtCQUErQjtRQUMvQixNQUFNLEVBQUVFLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1kLFNBQVNlLElBQUksQ0FBQ0MsVUFBVTtRQUVuRUMsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQnJCLElBQUlzQixPQUFPLENBQUNDLFFBQVE7UUFDdERILFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUJMLFVBQVUsV0FBVztRQUUxRCxNQUFNUSxjQUFjeEIsSUFBSXNCLE9BQU8sQ0FBQ0MsUUFBUSxLQUFLO1FBQzdDLE1BQU1FLG1CQUFtQixDQUFDRCxlQUFleEIsSUFBSXNCLE9BQU8sQ0FBQ0MsUUFBUSxLQUFLO1FBRWxFLElBQUlOLE9BQU87WUFDVEcsUUFBUUgsS0FBSyxDQUFDLCtCQUErQkE7UUFDL0M7UUFFQSwwQkFBMEI7UUFDMUIsSUFBSVEsb0JBQW9CLENBQUNULFNBQVM7WUFDaENJLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU92QixxREFBWUEsQ0FBQzRCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLFVBQVUzQixJQUFJNEIsR0FBRztRQUN4RDtRQUVBLCtDQUErQztRQUMvQyxJQUFJSixlQUFlUixTQUFTO1lBQzFCSSxRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPdkIscURBQVlBLENBQUM0QixRQUFRLENBQUMsSUFBSUMsSUFBSSxLQUFLM0IsSUFBSTRCLEdBQUc7UUFDbkQ7UUFFQSxPQUFPM0I7SUFDVCxFQUFFLE9BQU9nQixPQUFPO1FBQ2RHLFFBQVFILEtBQUssQ0FBQyxnQ0FBZ0NBO1FBQzlDLG1EQUFtRDtRQUNuRCxPQUFPaEI7SUFDVDtBQUNGO0FBRU8sTUFBTTRCLFNBQVM7SUFDcEJDLFNBQVM7UUFBQztLQUFpRDtBQUM3RCxFQUFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNqLXNrXFxyZXBvc1xccG9ydGZvbGlvLW5leHRqc1xccGVubnktam91cm5hbFxcc3JjXFxtaWRkbGV3YXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCwgdHlwZSBTdXBhYmFzZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InO1xyXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB0eXBlIHsgRGF0YWJhc2UgfSBmcm9tICdAL3R5cGVzL3N1cGFiYXNlJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcTogTmV4dFJlcXVlc3QpIHtcclxuICBjb25zdCByZXMgPSBOZXh0UmVzcG9uc2UubmV4dCgpO1xyXG5cclxuICAvLyBDcmVhdGUgYSBTdXBhYmFzZSBjbGllbnQgY29uZmlndXJlZCB0byB1c2UgY29va2llc1xyXG4gIGNvbnN0IHN1cGFiYXNlOiBTdXBhYmFzZUNsaWVudDxEYXRhYmFzZT4gPSBjcmVhdGVTZXJ2ZXJDbGllbnQoXHJcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxyXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhLFxyXG4gICAge1xyXG4gICAgICBjb29raWVzOiB7XHJcbiAgICAgICAgZ2V0OiAobmFtZSkgPT4gcmVxLmNvb2tpZXMuZ2V0KG5hbWUpPy52YWx1ZSxcclxuICAgICAgICBzZXQ6IChuYW1lLCB2YWx1ZSwgb3B0aW9ucykgPT4ge1xyXG4gICAgICAgICAgcmVzLmNvb2tpZXMuc2V0KHsgbmFtZSwgdmFsdWUsIC4uLm9wdGlvbnMgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZW1vdmU6IChuYW1lLCBvcHRpb25zKSA9PiB7XHJcbiAgICAgICAgICByZXMuY29va2llcy5zZXQoeyBuYW1lLCB2YWx1ZTogJycsIC4uLm9wdGlvbnMgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgIH1cclxuICApO1xyXG5cclxuICB0cnkge1xyXG4gICAgLy8gUmVmcmVzaCBzZXNzaW9uIGlmIGl0IGV4aXN0c1xyXG4gICAgY29uc3QgeyBkYXRhOiB7IHNlc3Npb24gfSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0U2Vzc2lvbigpO1xyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZygnTWlkZGxld2FyZSAtIFBhdGg6JywgcmVxLm5leHRVcmwucGF0aG5hbWUpO1xyXG4gICAgY29uc29sZS5sb2coJ01pZGRsZXdhcmUgLSBTZXNzaW9uOicsIHNlc3Npb24gPyAnZXhpc3RzJyA6ICdkb2VzIG5vdCBleGlzdCcpO1xyXG4gICAgXHJcbiAgICBjb25zdCBpc0xvZ2luUGFnZSA9IHJlcS5uZXh0VXJsLnBhdGhuYW1lID09PSAnL2xvZ2luJztcclxuICAgIGNvbnN0IGlzUHJvdGVjdGVkUm91dGUgPSAhaXNMb2dpblBhZ2UgJiYgcmVxLm5leHRVcmwucGF0aG5hbWUgIT09ICcvYXBpL2F1dGgnO1xyXG5cclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdNaWRkbGV3YXJlIC0gU2Vzc2lvbiBlcnJvcjonLCBlcnJvcik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSGFuZGxlIHByb3RlY3RlZCByb3V0ZXNcclxuICAgIGlmIChpc1Byb3RlY3RlZFJvdXRlICYmICFzZXNzaW9uKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdNaWRkbGV3YXJlIC0gUmVkaXJlY3RpbmcgdG8gbG9naW4gKG5vIHNlc3Npb24pJyk7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2xvZ2luJywgcmVxLnVybCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEhhbmRsZSBsb2dpbiBwYWdlIGFjY2VzcyB3aXRoIGFjdGl2ZSBzZXNzaW9uXHJcbiAgICBpZiAoaXNMb2dpblBhZ2UgJiYgc2Vzc2lvbikge1xyXG4gICAgICBjb25zb2xlLmxvZygnTWlkZGxld2FyZSAtIFJlZGlyZWN0aW5nIHRvIGhvbWUgKGhhcyBzZXNzaW9uKScpO1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwoJy8nLCByZXEudXJsKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlcztcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignTWlkZGxld2FyZSAtIENyaXRpY2FsIGVycm9yOicsIGVycm9yKTtcclxuICAgIC8vIE9uIGNyaXRpY2FsIGVycm9yLCBhbGxvdyB0aGUgcmVxdWVzdCB0byBjb250aW51ZVxyXG4gICAgcmV0dXJuIHJlcztcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgbWF0Y2hlcjogWycvKCg/IV9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljbykuKiknLF0sXHJcbn07ICJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJDbGllbnQiLCJOZXh0UmVzcG9uc2UiLCJtaWRkbGV3YXJlIiwicmVxIiwicmVzIiwibmV4dCIsInN1cGFiYXNlIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwiY29va2llcyIsImdldCIsIm5hbWUiLCJ2YWx1ZSIsInNldCIsIm9wdGlvbnMiLCJyZW1vdmUiLCJkYXRhIiwic2Vzc2lvbiIsImVycm9yIiwiYXV0aCIsImdldFNlc3Npb24iLCJjb25zb2xlIiwibG9nIiwibmV4dFVybCIsInBhdGhuYW1lIiwiaXNMb2dpblBhZ2UiLCJpc1Byb3RlY3RlZFJvdXRlIiwicmVkaXJlY3QiLCJVUkwiLCJ1cmwiLCJjb25maWciLCJtYXRjaGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});