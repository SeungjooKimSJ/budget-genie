"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function middleware(req) {\n    const res = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next();\n    // Create a Supabase client configured to use cookies\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://zolrdsjasjafdwmqakib.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpvbHJkc2phc2phZmR3bXFha2liIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3NjM4MTIsImV4cCI6MjA2MDMzOTgxMn0.1pYEPumd7uxhXpqt3G8rQ5A3HDEeMh0TEjFv11SMPLM\", {\n        cookies: {\n            get: (name)=>req.cookies.get(name)?.value,\n            set: (name, value, options)=>{\n                res.cookies.set({\n                    name,\n                    value,\n                    ...options\n                });\n            },\n            remove: (name, options)=>{\n                res.cookies.set({\n                    name,\n                    value: '',\n                    ...options\n                });\n            }\n        }\n    });\n    try {\n        // Refresh session if it exists\n        const { data: { session }, error } = await supabase.auth.getSession();\n        console.log('Middleware - Path:', req.nextUrl.pathname);\n        console.log('Middleware - Session:', session ? 'exists' : 'does not exist');\n        const isLoginPage = req.nextUrl.pathname === '/login';\n        const isProtectedRoute = !isLoginPage && req.nextUrl.pathname !== '/api/auth';\n        if (error) {\n            console.error('Middleware - Session error:', error);\n        }\n        // Handle protected routes\n        if (isProtectedRoute && !session) {\n            console.log('Middleware - Redirecting to login (no session)');\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/login', req.url));\n        }\n        // Handle login page access with active session\n        if (isLoginPage && session) {\n            console.log('Middleware - Redirecting to home (has session)');\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(new URL('/', req.url));\n        }\n        return res;\n    } catch (error) {\n        console.error('Middleware - Critical error:', error);\n        // On critical error, allow the request to continue\n        return res;\n    }\n}\nconst config = {\n    matcher: [\n        '/((?!_next/static|_next/image|favicon.ico).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUVSO0FBSXBDLGVBQWVFLFdBQVdDLEdBQWdCO0lBQy9DLE1BQU1DLE1BQU1ILHFEQUFZQSxDQUFDSSxJQUFJO0lBRTdCLHFEQUFxRDtJQUNyRCxNQUFNQyxXQUEyQk4saUVBQWtCQSxDQUNqRE8sMENBQW9DLEVBQ3BDQSxrTkFBeUMsRUFDekM7UUFDRUksU0FBUztZQUNQQyxLQUFLLENBQUNDLE9BQVNWLElBQUlRLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxPQUFPQztZQUN0Q0MsS0FBSyxDQUFDRixNQUFNQyxPQUFPRTtnQkFDakJaLElBQUlPLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDO29CQUFFRjtvQkFBTUM7b0JBQU8sR0FBR0UsT0FBTztnQkFBQztZQUM1QztZQUNBQyxRQUFRLENBQUNKLE1BQU1HO2dCQUNiWixJQUFJTyxPQUFPLENBQUNJLEdBQUcsQ0FBQztvQkFBRUY7b0JBQU1DLE9BQU87b0JBQUksR0FBR0UsT0FBTztnQkFBQztZQUNoRDtRQUNGO0lBQ0Y7SUFHRixJQUFJO1FBQ0YsK0JBQStCO1FBQy9CLE1BQU0sRUFBRUUsTUFBTSxFQUFFQyxPQUFPLEVBQUUsRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTWQsU0FBU2UsSUFBSSxDQUFDQyxVQUFVO1FBRW5FQyxRQUFRQyxHQUFHLENBQUMsc0JBQXNCckIsSUFBSXNCLE9BQU8sQ0FBQ0MsUUFBUTtRQUN0REgsUUFBUUMsR0FBRyxDQUFDLHlCQUF5QkwsVUFBVSxXQUFXO1FBRTFELE1BQU1RLGNBQWN4QixJQUFJc0IsT0FBTyxDQUFDQyxRQUFRLEtBQUs7UUFDN0MsTUFBTUUsbUJBQW1CLENBQUNELGVBQWV4QixJQUFJc0IsT0FBTyxDQUFDQyxRQUFRLEtBQUs7UUFFbEUsSUFBSU4sT0FBTztZQUNURyxRQUFRSCxLQUFLLENBQUMsK0JBQStCQTtRQUMvQztRQUVBLDBCQUEwQjtRQUMxQixJQUFJUSxvQkFBb0IsQ0FBQ1QsU0FBUztZQUNoQ0ksUUFBUUMsR0FBRyxDQUFDO1lBQ1osT0FBT3ZCLHFEQUFZQSxDQUFDNEIsUUFBUSxDQUFDLElBQUlDLElBQUksVUFBVTNCLElBQUk0QixHQUFHO1FBQ3hEO1FBRUEsK0NBQStDO1FBQy9DLElBQUlKLGVBQWVSLFNBQVM7WUFDMUJJLFFBQVFDLEdBQUcsQ0FBQztZQUNaLE9BQU92QixxREFBWUEsQ0FBQzRCLFFBQVEsQ0FBQyxJQUFJQyxJQUFJLEtBQUszQixJQUFJNEIsR0FBRztRQUNuRDtRQUVBLE9BQU8zQjtJQUNULEVBQUUsT0FBT2dCLE9BQU87UUFDZEcsUUFBUUgsS0FBSyxDQUFDLGdDQUFnQ0E7UUFDOUMsbURBQW1EO1FBQ25ELE9BQU9oQjtJQUNUO0FBQ0Y7QUFFTyxNQUFNNEIsU0FBUztJQUNwQkMsU0FBUztRQUFDO0tBQWlEO0FBQzdELEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc2otc2tcXHJlcG9zXFxwb3J0Zm9saW8tbmV4dGpzXFxwZW5ueS1qb3VybmFsXFxzcmNcXG1pZGRsZXdhcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2VydmVyQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3Nzcic7XHJcbmltcG9ydCB7IHR5cGUgU3VwYWJhc2VDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xyXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB0eXBlIHsgRGF0YWJhc2UgfSBmcm9tICdAL3R5cGVzL3N1cGFiYXNlJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtaWRkbGV3YXJlKHJlcTogTmV4dFJlcXVlc3QpIHtcclxuICBjb25zdCByZXMgPSBOZXh0UmVzcG9uc2UubmV4dCgpO1xyXG5cclxuICAvLyBDcmVhdGUgYSBTdXBhYmFzZSBjbGllbnQgY29uZmlndXJlZCB0byB1c2UgY29va2llc1xyXG4gIGNvbnN0IHN1cGFiYXNlOiBTdXBhYmFzZUNsaWVudCA9IGNyZWF0ZVNlcnZlckNsaWVudChcclxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXHJcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSEsXHJcbiAgICB7XHJcbiAgICAgIGNvb2tpZXM6IHtcclxuICAgICAgICBnZXQ6IChuYW1lKSA9PiByZXEuY29va2llcy5nZXQobmFtZSk/LnZhbHVlLFxyXG4gICAgICAgIHNldDogKG5hbWUsIHZhbHVlLCBvcHRpb25zKSA9PiB7XHJcbiAgICAgICAgICByZXMuY29va2llcy5zZXQoeyBuYW1lLCB2YWx1ZSwgLi4ub3B0aW9ucyB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZTogKG5hbWUsIG9wdGlvbnMpID0+IHtcclxuICAgICAgICAgIHJlcy5jb29raWVzLnNldCh7IG5hbWUsIHZhbHVlOiAnJywgLi4ub3B0aW9ucyB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gICk7XHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyBSZWZyZXNoIHNlc3Npb24gaWYgaXQgZXhpc3RzXHJcbiAgICBjb25zdCB7IGRhdGE6IHsgc2Vzc2lvbiB9LCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRTZXNzaW9uKCk7XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCdNaWRkbGV3YXJlIC0gUGF0aDonLCByZXEubmV4dFVybC5wYXRobmFtZSk7XHJcbiAgICBjb25zb2xlLmxvZygnTWlkZGxld2FyZSAtIFNlc3Npb246Jywgc2Vzc2lvbiA/ICdleGlzdHMnIDogJ2RvZXMgbm90IGV4aXN0Jyk7XHJcbiAgICBcclxuICAgIGNvbnN0IGlzTG9naW5QYWdlID0gcmVxLm5leHRVcmwucGF0aG5hbWUgPT09ICcvbG9naW4nO1xyXG4gICAgY29uc3QgaXNQcm90ZWN0ZWRSb3V0ZSA9ICFpc0xvZ2luUGFnZSAmJiByZXEubmV4dFVybC5wYXRobmFtZSAhPT0gJy9hcGkvYXV0aCc7XHJcblxyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ01pZGRsZXdhcmUgLSBTZXNzaW9uIGVycm9yOicsIGVycm9yKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBIYW5kbGUgcHJvdGVjdGVkIHJvdXRlc1xyXG4gICAgaWYgKGlzUHJvdGVjdGVkUm91dGUgJiYgIXNlc3Npb24pIHtcclxuICAgICAgY29uc29sZS5sb2coJ01pZGRsZXdhcmUgLSBSZWRpcmVjdGluZyB0byBsb2dpbiAobm8gc2Vzc2lvbiknKTtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvbG9naW4nLCByZXEudXJsKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSGFuZGxlIGxvZ2luIHBhZ2UgYWNjZXNzIHdpdGggYWN0aXZlIHNlc3Npb25cclxuICAgIGlmIChpc0xvZ2luUGFnZSAmJiBzZXNzaW9uKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdNaWRkbGV3YXJlIC0gUmVkaXJlY3RpbmcgdG8gaG9tZSAoaGFzIHNlc3Npb24pJyk7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnLycsIHJlcS51cmwpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdNaWRkbGV3YXJlIC0gQ3JpdGljYWwgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgLy8gT24gY3JpdGljYWwgZXJyb3IsIGFsbG93IHRoZSByZXF1ZXN0IHRvIGNvbnRpbnVlXHJcbiAgICByZXR1cm4gcmVzO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBtYXRjaGVyOiBbJy8oKD8hX25leHQvc3RhdGljfF9uZXh0L2ltYWdlfGZhdmljb24uaWNvKS4qKScsXSxcclxufTsgIl0sIm5hbWVzIjpbImNyZWF0ZVNlcnZlckNsaWVudCIsIk5leHRSZXNwb25zZSIsIm1pZGRsZXdhcmUiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic3VwYWJhc2UiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJjb29raWVzIiwiZ2V0IiwibmFtZSIsInZhbHVlIiwic2V0Iiwib3B0aW9ucyIsInJlbW92ZSIsImRhdGEiLCJzZXNzaW9uIiwiZXJyb3IiLCJhdXRoIiwiZ2V0U2Vzc2lvbiIsImNvbnNvbGUiLCJsb2ciLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJpc0xvZ2luUGFnZSIsImlzUHJvdGVjdGVkUm91dGUiLCJyZWRpcmVjdCIsIlVSTCIsInVybCIsImNvbmZpZyIsIm1hdGNoZXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});