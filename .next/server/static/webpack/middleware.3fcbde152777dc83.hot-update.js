"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./src/middleware.ts":
/*!***************************!*\
  !*** ./src/middleware.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(middleware)/./node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n\nasync function middleware(req) {\n    const res = next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.next();\n    // Create a Supabase client configured to use cookies\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://zolrdsjasjafdwmqakib.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpvbHJkc2phc2phZmR3bXFha2liIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3NjM4MTIsImV4cCI6MjA2MDMzOTgxMn0.1pYEPumd7uxhXpqt3G8rQ5A3HDEeMh0TEjFv11SMPLM\", {\n        cookies: {\n            get: (name)=>req.cookies.get(name)?.value,\n            set: (name, value, options)=>{\n                res.cookies.set({\n                    name,\n                    value,\n                    ...options\n                });\n            },\n            remove: (name, options)=>{\n                res.cookies.set({\n                    name,\n                    value: '',\n                    ...options\n                });\n            }\n        }\n    });\n    try {\n        const { data: { session } } = await supabase.auth.getSession();\n        const pathname = req.nextUrl.pathname;\n        // Debug logging\n        console.log('Middleware - Path:', pathname);\n        console.log('Middleware - Session:', session ? 'exists' : 'does not exist');\n        // Skip middleware for public routes\n        if (pathname.startsWith('/_next') || pathname.startsWith('/static') || pathname.startsWith('/api/auth') || pathname === '/favicon.ico') {\n            return res;\n        }\n        // Handle authentication\n        if (!session && pathname !== '/login') {\n            // Redirect to login if no session and not already on login page\n            const redirectUrl = new URL('/login', req.url);\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(redirectUrl);\n        }\n        if (session && pathname === '/login') {\n            // Redirect to home if session exists and trying to access login page\n            const redirectUrl = new URL('/', req.url);\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.redirect(redirectUrl);\n        }\n        return res;\n    } catch (error) {\n        console.error('Middleware - Error:', error);\n        return res;\n    }\n}\nconst config = {\n    matcher: [\n        '/((?!_next/static|_next/image|favicon.ico).*)'\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtRDtBQUNSO0FBR3BDLGVBQWVFLFdBQVdDLEdBQWdCO0lBQy9DLE1BQU1DLE1BQU1ILHFEQUFZQSxDQUFDSSxJQUFJO0lBRTdCLHFEQUFxRDtJQUNyRCxNQUFNQyxXQUFXTixpRUFBa0JBLENBQ2pDTywwQ0FBb0MsRUFDcENBLGtOQUF5QyxFQUN6QztRQUNFSSxTQUFTO1lBQ1BDLEtBQUssQ0FBQ0MsT0FBU1YsSUFBSVEsT0FBTyxDQUFDQyxHQUFHLENBQUNDLE9BQU9DO1lBQ3RDQyxLQUFLLENBQUNGLE1BQU1DLE9BQU9FO2dCQUNqQlosSUFBSU8sT0FBTyxDQUFDSSxHQUFHLENBQUM7b0JBQUVGO29CQUFNQztvQkFBTyxHQUFHRSxPQUFPO2dCQUFDO1lBQzVDO1lBQ0FDLFFBQVEsQ0FBQ0osTUFBTUc7Z0JBQ2JaLElBQUlPLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDO29CQUFFRjtvQkFBTUMsT0FBTztvQkFBSSxHQUFHRSxPQUFPO2dCQUFDO1lBQ2hEO1FBQ0Y7SUFDRjtJQUdGLElBQUk7UUFDRixNQUFNLEVBQUVFLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEVBQUUsR0FBRyxNQUFNYixTQUFTYyxJQUFJLENBQUNDLFVBQVU7UUFDNUQsTUFBTUMsV0FBV25CLElBQUlvQixPQUFPLENBQUNELFFBQVE7UUFFckMsZ0JBQWdCO1FBQ2hCRSxRQUFRQyxHQUFHLENBQUMsc0JBQXNCSDtRQUNsQ0UsUUFBUUMsR0FBRyxDQUFDLHlCQUF5Qk4sVUFBVSxXQUFXO1FBRTFELG9DQUFvQztRQUNwQyxJQUFJRyxTQUFTSSxVQUFVLENBQUMsYUFDcEJKLFNBQVNJLFVBQVUsQ0FBQyxjQUNwQkosU0FBU0ksVUFBVSxDQUFDLGdCQUNwQkosYUFBYSxnQkFBZ0I7WUFDL0IsT0FBT2xCO1FBQ1Q7UUFFQSx3QkFBd0I7UUFDeEIsSUFBSSxDQUFDZSxXQUFXRyxhQUFhLFVBQVU7WUFDckMsZ0VBQWdFO1lBQ2hFLE1BQU1LLGNBQWMsSUFBSUMsSUFBSSxVQUFVekIsSUFBSTBCLEdBQUc7WUFDN0MsT0FBTzVCLHFEQUFZQSxDQUFDNkIsUUFBUSxDQUFDSDtRQUMvQjtRQUVBLElBQUlSLFdBQVdHLGFBQWEsVUFBVTtZQUNwQyxxRUFBcUU7WUFDckUsTUFBTUssY0FBYyxJQUFJQyxJQUFJLEtBQUt6QixJQUFJMEIsR0FBRztZQUN4QyxPQUFPNUIscURBQVlBLENBQUM2QixRQUFRLENBQUNIO1FBQy9CO1FBRUEsT0FBT3ZCO0lBQ1QsRUFBRSxPQUFPMkIsT0FBTztRQUNkUCxRQUFRTyxLQUFLLENBQUMsdUJBQXVCQTtRQUNyQyxPQUFPM0I7SUFDVDtBQUNGO0FBRU8sTUFBTTRCLFNBQVM7SUFDcEJDLFNBQVM7UUFBQztLQUFpRDtBQUM3RCxFQUFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNqLXNrXFxyZXBvc1xccG9ydGZvbGlvLW5leHRqc1xccGVubnktam91cm5hbFxcc3JjXFxtaWRkbGV3YXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InO1xyXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXE6IE5leHRSZXF1ZXN0KSB7XHJcbiAgY29uc3QgcmVzID0gTmV4dFJlc3BvbnNlLm5leHQoKTtcclxuXHJcbiAgLy8gQ3JlYXRlIGEgU3VwYWJhc2UgY2xpZW50IGNvbmZpZ3VyZWQgdG8gdXNlIGNvb2tpZXNcclxuICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZVNlcnZlckNsaWVudChcclxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXHJcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSEsXHJcbiAgICB7XHJcbiAgICAgIGNvb2tpZXM6IHtcclxuICAgICAgICBnZXQ6IChuYW1lKSA9PiByZXEuY29va2llcy5nZXQobmFtZSk/LnZhbHVlLFxyXG4gICAgICAgIHNldDogKG5hbWUsIHZhbHVlLCBvcHRpb25zKSA9PiB7XHJcbiAgICAgICAgICByZXMuY29va2llcy5zZXQoeyBuYW1lLCB2YWx1ZSwgLi4ub3B0aW9ucyB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZTogKG5hbWUsIG9wdGlvbnMpID0+IHtcclxuICAgICAgICAgIHJlcy5jb29raWVzLnNldCh7IG5hbWUsIHZhbHVlOiAnJywgLi4ub3B0aW9ucyB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfVxyXG4gICk7XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IGRhdGE6IHsgc2Vzc2lvbiB9IH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFNlc3Npb24oKTtcclxuICAgIGNvbnN0IHBhdGhuYW1lID0gcmVxLm5leHRVcmwucGF0aG5hbWU7XHJcblxyXG4gICAgLy8gRGVidWcgbG9nZ2luZ1xyXG4gICAgY29uc29sZS5sb2coJ01pZGRsZXdhcmUgLSBQYXRoOicsIHBhdGhuYW1lKTtcclxuICAgIGNvbnNvbGUubG9nKCdNaWRkbGV3YXJlIC0gU2Vzc2lvbjonLCBzZXNzaW9uID8gJ2V4aXN0cycgOiAnZG9lcyBub3QgZXhpc3QnKTtcclxuXHJcbiAgICAvLyBTa2lwIG1pZGRsZXdhcmUgZm9yIHB1YmxpYyByb3V0ZXNcclxuICAgIGlmIChwYXRobmFtZS5zdGFydHNXaXRoKCcvX25leHQnKSB8fCBcclxuICAgICAgICBwYXRobmFtZS5zdGFydHNXaXRoKCcvc3RhdGljJykgfHwgXHJcbiAgICAgICAgcGF0aG5hbWUuc3RhcnRzV2l0aCgnL2FwaS9hdXRoJykgfHxcclxuICAgICAgICBwYXRobmFtZSA9PT0gJy9mYXZpY29uLmljbycpIHtcclxuICAgICAgcmV0dXJuIHJlcztcclxuICAgIH1cclxuXHJcbiAgICAvLyBIYW5kbGUgYXV0aGVudGljYXRpb25cclxuICAgIGlmICghc2Vzc2lvbiAmJiBwYXRobmFtZSAhPT0gJy9sb2dpbicpIHtcclxuICAgICAgLy8gUmVkaXJlY3QgdG8gbG9naW4gaWYgbm8gc2Vzc2lvbiBhbmQgbm90IGFscmVhZHkgb24gbG9naW4gcGFnZVxyXG4gICAgICBjb25zdCByZWRpcmVjdFVybCA9IG5ldyBVUkwoJy9sb2dpbicsIHJlcS51cmwpO1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHJlZGlyZWN0VXJsKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoc2Vzc2lvbiAmJiBwYXRobmFtZSA9PT0gJy9sb2dpbicpIHtcclxuICAgICAgLy8gUmVkaXJlY3QgdG8gaG9tZSBpZiBzZXNzaW9uIGV4aXN0cyBhbmQgdHJ5aW5nIHRvIGFjY2VzcyBsb2dpbiBwYWdlXHJcbiAgICAgIGNvbnN0IHJlZGlyZWN0VXJsID0gbmV3IFVSTCgnLycsIHJlcS51cmwpO1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLnJlZGlyZWN0KHJlZGlyZWN0VXJsKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdNaWRkbGV3YXJlIC0gRXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHJlcztcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgbWF0Y2hlcjogWycvKCg/IV9uZXh0L3N0YXRpY3xfbmV4dC9pbWFnZXxmYXZpY29uLmljbykuKiknLF0sXHJcbn07ICJdLCJuYW1lcyI6WyJjcmVhdGVTZXJ2ZXJDbGllbnQiLCJOZXh0UmVzcG9uc2UiLCJtaWRkbGV3YXJlIiwicmVxIiwicmVzIiwibmV4dCIsInN1cGFiYXNlIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwiY29va2llcyIsImdldCIsIm5hbWUiLCJ2YWx1ZSIsInNldCIsIm9wdGlvbnMiLCJyZW1vdmUiLCJkYXRhIiwic2Vzc2lvbiIsImF1dGgiLCJnZXRTZXNzaW9uIiwicGF0aG5hbWUiLCJuZXh0VXJsIiwiY29uc29sZSIsImxvZyIsInN0YXJ0c1dpdGgiLCJyZWRpcmVjdFVybCIsIlVSTCIsInVybCIsInJlZGlyZWN0IiwiZXJyb3IiLCJjb25maWciLCJtYXRjaGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.ts\n");

/***/ })

});